version: 2.1

# Common anchors
# PR cache anchors
gradle_cache_key: &gradle_cache_key
  key: v1-dependencies-{{ checksum "dependencies.gradle" }}
restore_gradle_cache: &restore_gradle_cache
  restore_cache:
    <<: *gradle_cache_key
save_gradle_cache: &save_gradle_cache
  save_cache:
    <<: *gradle_cache_key
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper

executors:
  android:
    docker:
      - image: circleci/android:api-28
    working_directory: ~/repo
    environment:
      JAVA_TOOL_OPTIONS: "-Xmx1536m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false"
      TERM: dumb

  macos:
    parameters:
      resource_class:
        type: string
        default: medium
    macos:
      xcode: 11.7.0
  mkdocs:
    docker:
      - image: rappdw/docker-java-python:zulu1.8.0_262-python3.7.9
    working_directory: ~/repo

jobs:
  build_and_test:
    executor: macos
    steps:
      - checkout
      - *restore_gradle_cache
      - run:
          name: Build and test library and dsl
          command: ./gradlew :flowredux:build :dsl:build --stacktrace
      - *save_gradle_cache
  deploy_oss_sonatype:
    executor: macos
    steps:
      - checkout
      - *restore_gradle_cache
      - run:
          name: Setting up Gradle signing
          command: |
            echo "signingInMemoryKey=$ASCII_AMORED_SIGNING_GPG_IN_MEMORY_KEY" >> gradle.properties
            echo "signingInMemoryKeyPassword=$GPG_IN_MEMORY_PASSWORD" >> gradle.properties
      - run:
          name: Publish to OSS Sonatype
          command: ./gradlew publish --no-daemon --no-parallel --stacktrace
      - run:
          name: Release to Maven Central via OSS Sonatype
          command: ./gradlew closeAndReleaseRepository --stacktrace
      - *save_gradle_cache
  deploy_website:
    executor: mkdocs
    steps:
      - run:
          name: Setup mkdocs and material theme
          command: |
            pip install mkdocs
            pip install mkdocs-material
      - run:
          name: Set Git config
          command: |
            git config --global user.email "$GIT_AUTHOR_EMAIL"
            git config --global user.name "$GIT_AUTHOR_NAME"
            git config --global user.signingkey "$GIT_SIGNING_KEY"
            git config --global commit.gpgsign true
            export PRIVATE_KEY_FILE=`mktemp`
            echo $GPG_PRIVATE_KEY | base64 -d > $PRIVATE_KEY_FILE
            gpg --import $PRIVATE_KEY_FILE
      - checkout
      - run:
          name: Deploy Website
          command: ./deploy_website.sh

workflows:
  version: 2

  master-pipeline:
    jobs:
      - build_and_test:
          filters:
            branches:
              only:
                - master
#      - deploy_website:
#          context: "Commit Signing"
#          requires:
#            - deploy_oss_sonatype
#          filters:
#            branches:
#              only:
#                - master
      - deploy_oss_sonatype:
          context: "vanniktech-gradle-maven-publish"
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - master

  check-pr:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
